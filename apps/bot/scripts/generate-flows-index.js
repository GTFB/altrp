const fs = require('fs');
const path = require('path');

// –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å —Ñ–ª–æ—É
const flowsDir = path.join(__dirname, '../src/config/flows');
const indexPath = path.join(flowsDir, 'index.ts');

// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ .ts —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ flows (–∫—Ä–æ–º–µ index.ts)
const files = fs.readdirSync(flowsDir)
  .filter(file => file.endsWith('.ts') && file !== 'index.ts')
  .map(file => file.replace('.ts', ''))
  .sort();

console.log('üîç Found flow files:', files);

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ index.ts
const generateIndexContent = (flowFiles) => {
  const imports = flowFiles.map(fileName => {
    const flowName = fileName.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());
    const flowExportName = `${flowName.charAt(0).toLowerCase() + flowName.slice(1)}Flow`;
    return `import { ${flowExportName} } from './${fileName}';`;
  }).join('\n');

  const flowsObject = flowFiles.map(fileName => {
    const flowName = fileName.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());
    const flowExportName = `${flowName.charAt(0).toLowerCase() + flowName.slice(1)}Flow`;
    return `  ${fileName}: ${flowExportName}`;
  }).join(',\n');

  const exports = flowFiles.map(fileName => {
    const flowName = fileName.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());
    return `${flowName.charAt(0).toLowerCase() + flowName.slice(1)}Flow`;
  }).join(',\n');

  return `import type { BotFlow } from '../../core/flow-types';

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª - –ù–ï –†–ï–î–ê–ö–¢–ò–†–û–í–ê–¢–¨ –í–†–£–ß–ù–£–Æ!
// –î–ª—è —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: npm run generate-flows-index

${imports}

// –û–±—ä–µ–∫—Ç —Å–æ –≤—Å–µ–º–∏ —Ñ–ª–æ—É –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å flow-engine.ts
export const flows: Record<string, BotFlow> = {
${flowsObject}
};

// –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ñ–ª–æ—É –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
export {
  ${exports}
};
`;
};

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª
const content = generateIndexContent(files);
fs.writeFileSync(indexPath, content, 'utf8');

console.log('‚úÖ Generated index.ts with', files.length, 'flows');
console.log('üìÅ Files included:', files.join(', '));
