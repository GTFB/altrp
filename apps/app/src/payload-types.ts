/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    settings: Setting;
    taxonomy: Taxonomy;
    media: Media;
    pages: Page;
    posts: Post;
    users: User;
    journals: Journal;
    assets: Asset;
    asset_variants: AssetVariant;
    bases: Base;
    base_moves: BaseMove;
    base_move_routes: BaseMoveRoute;
    contractors: Contractor;
    deals: Deal;
    deal_products: DealProduct;
    echelons: Echelon;
    echelon_employees: EchelonEmployee;
    employee_leaves: EmployeeLeaf;
    employee_timesheets: EmployeeTimesheet;
    expanses: Expanse;
    finances: Finance;
    goals: Goal;
    humans: Human;
    identities: Identity;
    journal_connections: JournalConnection;
    journal_generations: JournalGeneration;
    journal_system: JournalSystem;
    keys: Key;
    locations: Location;
    messages: Message;
    message_threads: MessageThread;
    notices: Notice;
    outreaches: Outreach;
    outreach_referrals: OutreachReferral;
    permissions: Permission;
    products: Product;
    product_variants: ProductVariant;
    qualifications: Qualification;
    relations: Relation;
    roles: Role;
    role_permissions: RolePermission;
    user_roles: UserRole;
    segments: Segment;
    texts: Text;
    text_variants: TextVariant;
    universities: University;
    user_bans: UserBan;
    user_sessions: UserSession;
    user_verifications: UserVerification;
    votes: Vote;
    wallets: Wallet;
    wallet_transactions: WalletTransaction;
    yields: Yield;
    zoos: Zoo;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    settings: SettingsSelect<false> | SettingsSelect<true>;
    taxonomy: TaxonomySelect<false> | TaxonomySelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    journals: JournalsSelect<false> | JournalsSelect<true>;
    assets: AssetsSelect<false> | AssetsSelect<true>;
    asset_variants: AssetVariantsSelect<false> | AssetVariantsSelect<true>;
    bases: BasesSelect<false> | BasesSelect<true>;
    base_moves: BaseMovesSelect<false> | BaseMovesSelect<true>;
    base_move_routes: BaseMoveRoutesSelect<false> | BaseMoveRoutesSelect<true>;
    contractors: ContractorsSelect<false> | ContractorsSelect<true>;
    deals: DealsSelect<false> | DealsSelect<true>;
    deal_products: DealProductsSelect<false> | DealProductsSelect<true>;
    echelons: EchelonsSelect<false> | EchelonsSelect<true>;
    echelon_employees: EchelonEmployeesSelect<false> | EchelonEmployeesSelect<true>;
    employee_leaves: EmployeeLeavesSelect<false> | EmployeeLeavesSelect<true>;
    employee_timesheets: EmployeeTimesheetsSelect<false> | EmployeeTimesheetsSelect<true>;
    expanses: ExpansesSelect<false> | ExpansesSelect<true>;
    finances: FinancesSelect<false> | FinancesSelect<true>;
    goals: GoalsSelect<false> | GoalsSelect<true>;
    humans: HumansSelect<false> | HumansSelect<true>;
    identities: IdentitiesSelect<false> | IdentitiesSelect<true>;
    journal_connections: JournalConnectionsSelect<false> | JournalConnectionsSelect<true>;
    journal_generations: JournalGenerationsSelect<false> | JournalGenerationsSelect<true>;
    journal_system: JournalSystemSelect<false> | JournalSystemSelect<true>;
    keys: KeysSelect<false> | KeysSelect<true>;
    locations: LocationsSelect<false> | LocationsSelect<true>;
    messages: MessagesSelect<false> | MessagesSelect<true>;
    message_threads: MessageThreadsSelect<false> | MessageThreadsSelect<true>;
    notices: NoticesSelect<false> | NoticesSelect<true>;
    outreaches: OutreachesSelect<false> | OutreachesSelect<true>;
    outreach_referrals: OutreachReferralsSelect<false> | OutreachReferralsSelect<true>;
    permissions: PermissionsSelect<false> | PermissionsSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    product_variants: ProductVariantsSelect<false> | ProductVariantsSelect<true>;
    qualifications: QualificationsSelect<false> | QualificationsSelect<true>;
    relations: RelationsSelect<false> | RelationsSelect<true>;
    roles: RolesSelect<false> | RolesSelect<true>;
    role_permissions: RolePermissionsSelect<false> | RolePermissionsSelect<true>;
    user_roles: UserRolesSelect<false> | UserRolesSelect<true>;
    segments: SegmentsSelect<false> | SegmentsSelect<true>;
    texts: TextsSelect<false> | TextsSelect<true>;
    text_variants: TextVariantsSelect<false> | TextVariantsSelect<true>;
    universities: UniversitiesSelect<false> | UniversitiesSelect<true>;
    user_bans: UserBansSelect<false> | UserBansSelect<true>;
    user_sessions: UserSessionsSelect<false> | UserSessionsSelect<true>;
    user_verifications: UserVerificationsSelect<false> | UserVerificationsSelect<true>;
    votes: VotesSelect<false> | VotesSelect<true>;
    wallets: WalletsSelect<false> | WalletsSelect<true>;
    wallet_transactions: WalletTransactionsSelect<false> | WalletTransactionsSelect<true>;
    yields: YieldsSelect<false> | YieldsSelect<true>;
    zoos: ZoosSelect<false> | ZoosSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Setting {
  id: number;
  uuid?: string | null;
  attribute: string;
  value?: string | null;
  type?: string | null;
  order?: number | null;
  xaid?: string | null;
  created_at?: string | null;
  updated_at?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "taxonomy".
 */
export interface Taxonomy {
  id: number;
  entity: string;
  name: string;
  title?: string | null;
  sort_order?: number | null;
  created_at?: number | null;
  updated_at?: number | null;
  deleted_at?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  uuid: string;
  maid?: string | null;
  title?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  alt_text?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  caption?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  file_name?: string | null;
  file_path?: string | null;
  mime_type?: string | null;
  size_bytes?: number | null;
  is_public?: boolean | null;
  type?: string | null;
  uploader_aid?: string | null;
  order?: number | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (number | null) | Media;
  };
  layout: (CallToActionBlock | ContentBlock | MediaBlock | ArchiveBlock | FormBlock)[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  uuid?: string | null;
  human_aid?: string | null;
  password_hash?: string | null;
  is_active?: boolean | null;
  last_login_at?: string | null;
  email_verified_at?: string | null;
  created_at?: string | null;
  updated_at?: string | null;
  deleted_at?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * System activity log. Records are created automatically.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "journals".
 */
export interface Journal {
  id: number;
  uuid?: string | null;
  user_id?: number | null;
  action?: string | null;
  details?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  xaid?: string | null;
  created_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "assets".
 */
export interface Asset {
  id: number;
  uuid: string;
  aaid: string;
  owner_aid?: string | null;
  number?: string | null;
  title?: string | null;
  url?: string | null;
  type_name?: string | null;
  status_name?: string | null;
  version?: string | null;
  order?: number | null;
  xaid?: string | null;
  created_at?: string | null;
  updated_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "asset_variants".
 */
export interface AssetVariant {
  id: number;
  uuid: string;
  full_aaid: string;
  number?: string | null;
  title?: string | null;
  media_id?: string | null;
  version?: string | null;
  order?: number | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bases".
 */
export interface Base {
  id: number;
  uuid: string;
  baid: string;
  full_baid?: string | null;
  number?: string | null;
  title?: string | null;
  laid_from?: string | null;
  laid_to?: string | null;
  cycle?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  status_name?: string | null;
  order?: number | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "base_moves".
 */
export interface BaseMove {
  id: number;
  uuid: string;
  baid?: string | null;
  full_baid?: string | null;
  full_daid?: string | null;
  number?: string | null;
  title?: string | null;
  laid_from?: string | null;
  laid_to?: string | null;
  cycle?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  status_name?: string | null;
  order?: number | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "base_move_routes".
 */
export interface BaseMoveRoute {
  id: number;
  uuid: string;
  full_baid: string;
  index?: string | null;
  city?: string | null;
  laid_id?: string | null;
  status_name?: string | null;
  order?: number | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contractors".
 */
export interface Contractor {
  id: number;
  uuid: string;
  caid: string;
  title: string;
  reg?: string | null;
  tin?: string | null;
  status_name?: string | null;
  type?: string | null;
  city_name?: string | null;
  order?: number | null;
  xaid?: string | null;
  media_id?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "deals".
 */
export interface Deal {
  id: number;
  uuid: string;
  daid: string;
  full_daid?: string | null;
  client_aid?: string | null;
  title?: string | null;
  cycle?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  status_name?: string | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "deal_products".
 */
export interface DealProduct {
  id: number;
  uuid?: string | null;
  full_daid: string;
  full_paid: string;
  quantity: number;
  status_name?: string | null;
  order?: number | null;
  updated_at?: string | null;
  created_at?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "echelons".
 */
export interface Echelon {
  id: number;
  uuid: string;
  eaid: string;
  parent_eaid?: string | null;
  department_id?: string | null;
  position?: string | null;
  city_name?: string | null;
  status_name?: string | null;
  order?: number | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "echelon_employees".
 */
export interface EchelonEmployee {
  id: number;
  uuid: string;
  eaid: string;
  full_eaid?: string | null;
  haid: string;
  email?: string | null;
  status_name?: string | null;
  is_public?: boolean | null;
  order?: number | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  media_id?: string | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "employee_leaves".
 */
export interface EmployeeLeaf {
  id: number;
  uuid?: string | null;
  elaid?: string | null;
  full_eaid?: string | null;
  type?: string | null;
  order?: number | null;
  xaid?: string | null;
  started_at?: string | null;
  ended_at?: string | null;
  duration?: number | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "employee_timesheets".
 */
export interface EmployeeTimesheet {
  id: number;
  uuid?: string | null;
  etaid?: string | null;
  full_eaid?: string | null;
  order?: number | null;
  xaid?: string | null;
  started_at?: string | null;
  ended_at?: string | null;
  duration?: number | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "expanses".
 */
export interface Expanse {
  id: number;
  uuid?: string | null;
  xaid?: string | null;
  title?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  status_name?: string | null;
  order?: number | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "finances".
 */
export interface Finance {
  id: number;
  uuid: string;
  faid: string;
  full_daid?: string | null;
  title?: string | null;
  sum?: number | null;
  currency_id?: string | null;
  cycle?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  type?: string | null;
  status_name?: string | null;
  order?: number | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "goals".
 */
export interface Goal {
  id: number;
  uuid: string;
  gaid: string;
  full_gaid?: string | null;
  parent_full_gaid?: string | null;
  title?: string | null;
  cycle?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  type?: string | null;
  status_name?: string | null;
  order?: number | null;
  is_public?: boolean | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "humans".
 */
export interface Human {
  id: number;
  uuid: string;
  haid: string;
  full_name: string;
  birthday?: string | null;
  email?: string | null;
  sex?: string | null;
  status_name?: string | null;
  type?: string | null;
  city_name?: string | null;
  order?: number | null;
  xaid?: string | null;
  media_id?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "identities".
 */
export interface Identity {
  id: number;
  uuid: string;
  iaid: string;
  entity_aid: string;
  identity_aid: string;
  permission?: string | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "journal_connections".
 */
export interface JournalConnection {
  id: number;
  uuid?: string | null;
  source_user_id?: number | null;
  target_user_id?: number | null;
  relationship_name?: string | null;
  status?: string | null;
  details?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "journal_generations".
 */
export interface JournalGeneration {
  id: number;
  uuid?: string | null;
  full_maid?: string | null;
  user_id?: number | null;
  model_name?: string | null;
  status?: string | null;
  token_in?: number | null;
  token_out?: number | null;
  total_token?: number | null;
  details?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  xaid?: string | null;
  created_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "journal_system".
 */
export interface JournalSystem {
  id: number;
  uuid?: string | null;
  entity_aid?: string | null;
  user_id?: number | null;
  details?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  xaid?: string | null;
  created_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "keys".
 */
export interface Key {
  id: number;
  uuid?: string | null;
  kaid: string;
  key_prefix?: string | null;
  key_hash: string;
  title?: string | null;
  is_active?: boolean | null;
  is_valid?: boolean | null;
  order?: number | null;
  xaid?: string | null;
  permission_id?: number | null;
  updated_at?: string | null;
  created_at?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations".
 */
export interface Location {
  id: number;
  uuid: string;
  laid: string;
  full_laid?: string | null;
  title?: string | null;
  city?: string | null;
  type?: string | null;
  status_name?: string | null;
  is_public?: boolean | null;
  order?: number | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messages".
 */
export interface Message {
  id: number;
  uuid: string;
  maid: string;
  full_maid?: string | null;
  title?: string | null;
  status_name?: string | null;
  order?: number | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "message_threads".
 */
export interface MessageThread {
  id: number;
  uuid: string;
  maid: string;
  parent_maid?: string | null;
  title?: string | null;
  status_name?: string | null;
  type?: string | null;
  value?: string | null;
  order?: number | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notices".
 */
export interface Notice {
  id: number;
  uuid?: string | null;
  naid?: string | null;
  target_aid?: string | null;
  title?: string | null;
  is_read?: boolean | null;
  type_name?: string | null;
  order?: number | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "outreaches".
 */
export interface Outreach {
  id: number;
  uuid: string;
  oaid: string;
  said?: string | null;
  title?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  strategy_type?: string | null;
  mechanic_type?: string | null;
  order?: number | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "outreach_referrals".
 */
export interface OutreachReferral {
  id: number;
  uuid?: string | null;
  oaid: string;
  title?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  depth?: number | null;
  order?: number | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "permissions".
 */
export interface Permission {
  id: number;
  uuid?: string | null;
  prm_aid?: string | null;
  action_key: string;
  title?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  group_name?: string | null;
  description?: string | null;
  order?: number | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  uuid: string;
  paid: string;
  title?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  category?: string | null;
  type?: string | null;
  status_name?: string | null;
  is_public?: boolean | null;
  order?: number | null;
  xaid?: string | null;
  created_at?: string | null;
  updated_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product_variants".
 */
export interface ProductVariant {
  id: number;
  uuid: string;
  pvaid: string;
  full_paid: string;
  vendor_aid?: string | null;
  sku?: string | null;
  title?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  status_name?: string | null;
  order?: number | null;
  xaid?: string | null;
  created_at?: string | null;
  updated_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "qualifications".
 */
export interface Qualification {
  id: number;
  uuid?: string | null;
  qaid?: string | null;
  haid?: string | null;
  title?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  category?: string | null;
  type?: string | null;
  status_name?: string | null;
  order?: number | null;
  xaid?: string | null;
  created_at?: string | null;
  updated_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "relations".
 */
export interface Relation {
  id: number;
  uuid?: string | null;
  source_entity: string;
  target_entity: string;
  type?: string | null;
  status_name?: string | null;
  order?: number | null;
  xaid?: string | null;
  created_at?: string | null;
  updated_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "roles".
 */
export interface Role {
  id: number;
  uuid?: string | null;
  raid?: string | null;
  title?: string | null;
  name?: string | null;
  description?: string | null;
  is_system?: boolean | null;
  order?: number | null;
  xaid?: string | null;
  created_at?: string | null;
  updated_at?: string | null;
  deleted_at?: number | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "role_permissions".
 */
export interface RolePermission {
  id: number;
  role_uuid: string;
  permission_uuid: string;
  uuid?: string | null;
  order?: number | null;
  xaid?: string | null;
  created_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user_roles".
 */
export interface UserRole {
  id: number;
  user_uuid: string;
  role_uuid: string;
  order?: number | null;
  created_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "segments".
 */
export interface Segment {
  id: number;
  uuid?: string | null;
  said?: string | null;
  title?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  status_name?: string | null;
  order?: number | null;
  xaid?: string | null;
  created_at?: string | null;
  updated_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "texts".
 */
export interface Text {
  id: number;
  uuid?: string | null;
  taid?: string | null;
  title?: string | null;
  type?: string | null;
  status_name?: string | null;
  is_public?: boolean | null;
  order?: number | null;
  xaid?: string | null;
  created_at?: string | null;
  updated_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "text_variants".
 */
export interface TextVariant {
  id: number;
  uuid?: string | null;
  taid?: string | null;
  full_taid?: string | null;
  title?: string | null;
  type?: string | null;
  status_name?: string | null;
  version?: string | null;
  order?: number | null;
  xaid?: string | null;
  created_at?: string | null;
  updated_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "universities".
 */
export interface University {
  id: number;
  uuid?: string | null;
  uaid?: string | null;
  parent_uaid?: string | null;
  full_uaid?: string | null;
  title?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  status_name?: string | null;
  order?: number | null;
  xaid?: string | null;
  created_at?: string | null;
  updated_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user_bans".
 */
export interface UserBan {
  id: number;
  uuid?: string | null;
  user_uuid: string;
  banned_by_aid?: string | null;
  reason?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  type?: string | null;
  expires_at?: string | null;
  revoked_at?: string | null;
  revoked_by_aid?: string | null;
  created_at?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user_sessions".
 */
export interface UserSession {
  id: number;
  uuid?: string | null;
  user_uuid: string;
  token_hash: string;
  ip_address?: string | null;
  user_agent?: string | null;
  last_active_at?: string | null;
  expires_at?: string | null;
  xaid?: string | null;
  created_at?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user_verifications".
 */
export interface UserVerification {
  id: number;
  uuid?: string | null;
  user_uuid: string;
  type?: string | null;
  token_hash: string;
  expires_at?: string | null;
  verified_at?: string | null;
  created_at?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "votes".
 */
export interface Vote {
  id: number;
  uuid?: string | null;
  vaid?: string | null;
  full_vaid?: string | null;
  haid?: string | null;
  title?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  status_name?: string | null;
  order?: number | null;
  xaid?: string | null;
  created_at?: string | null;
  updated_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wallets".
 */
export interface Wallet {
  id: number;
  uuid?: string | null;
  waid?: string | null;
  full_waid?: string | null;
  target_aid?: string | null;
  title?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  status_name?: string | null;
  order?: number | null;
  xaid?: string | null;
  created_at?: string | null;
  updated_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wallet_transactions".
 */
export interface WalletTransaction {
  id: number;
  uuid?: string | null;
  wcaid: string;
  full_waid?: string | null;
  target_aid?: string | null;
  amount: number;
  status_name?: string | null;
  order?: number | null;
  xaid?: string | null;
  created_at?: string | null;
  updated_at?: string | null;
  deleted_at?: number | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "yields".
 */
export interface Yield {
  id: number;
  uuid?: string | null;
  yaid?: string | null;
  parent_yaid?: string | null;
  full_yaid?: string | null;
  haid?: string | null;
  title?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  status_name?: string | null;
  order?: number | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "zoos".
 */
export interface Zoo {
  id: number;
  uuid?: string | null;
  zaid?: string | null;
  parent_zaid?: string | null;
  name?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  birthday?: string | null;
  sex?: string | null;
  status_name?: string | null;
  city_name?: string | null;
  order?: number | null;
  xaid?: string | null;
  updated_at?: string | null;
  created_at?: string | null;
  deleted_at?: number | null;
  media_id?: string | null;
  gin?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  fts?: string | null;
  data_in?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  data_out?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        categoryID?: string | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'settings';
        value: number | Setting;
      } | null)
    | ({
        relationTo: 'taxonomy';
        value: number | Taxonomy;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'journals';
        value: number | Journal;
      } | null)
    | ({
        relationTo: 'assets';
        value: number | Asset;
      } | null)
    | ({
        relationTo: 'asset_variants';
        value: number | AssetVariant;
      } | null)
    | ({
        relationTo: 'bases';
        value: number | Base;
      } | null)
    | ({
        relationTo: 'base_moves';
        value: number | BaseMove;
      } | null)
    | ({
        relationTo: 'base_move_routes';
        value: number | BaseMoveRoute;
      } | null)
    | ({
        relationTo: 'contractors';
        value: number | Contractor;
      } | null)
    | ({
        relationTo: 'deals';
        value: number | Deal;
      } | null)
    | ({
        relationTo: 'deal_products';
        value: number | DealProduct;
      } | null)
    | ({
        relationTo: 'echelons';
        value: number | Echelon;
      } | null)
    | ({
        relationTo: 'echelon_employees';
        value: number | EchelonEmployee;
      } | null)
    | ({
        relationTo: 'employee_leaves';
        value: number | EmployeeLeaf;
      } | null)
    | ({
        relationTo: 'employee_timesheets';
        value: number | EmployeeTimesheet;
      } | null)
    | ({
        relationTo: 'expanses';
        value: number | Expanse;
      } | null)
    | ({
        relationTo: 'finances';
        value: number | Finance;
      } | null)
    | ({
        relationTo: 'goals';
        value: number | Goal;
      } | null)
    | ({
        relationTo: 'humans';
        value: number | Human;
      } | null)
    | ({
        relationTo: 'identities';
        value: number | Identity;
      } | null)
    | ({
        relationTo: 'journal_connections';
        value: number | JournalConnection;
      } | null)
    | ({
        relationTo: 'journal_generations';
        value: number | JournalGeneration;
      } | null)
    | ({
        relationTo: 'journal_system';
        value: number | JournalSystem;
      } | null)
    | ({
        relationTo: 'keys';
        value: number | Key;
      } | null)
    | ({
        relationTo: 'locations';
        value: number | Location;
      } | null)
    | ({
        relationTo: 'messages';
        value: number | Message;
      } | null)
    | ({
        relationTo: 'message_threads';
        value: number | MessageThread;
      } | null)
    | ({
        relationTo: 'notices';
        value: number | Notice;
      } | null)
    | ({
        relationTo: 'outreaches';
        value: number | Outreach;
      } | null)
    | ({
        relationTo: 'outreach_referrals';
        value: number | OutreachReferral;
      } | null)
    | ({
        relationTo: 'permissions';
        value: number | Permission;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'product_variants';
        value: number | ProductVariant;
      } | null)
    | ({
        relationTo: 'qualifications';
        value: number | Qualification;
      } | null)
    | ({
        relationTo: 'relations';
        value: number | Relation;
      } | null)
    | ({
        relationTo: 'roles';
        value: number | Role;
      } | null)
    | ({
        relationTo: 'role_permissions';
        value: number | RolePermission;
      } | null)
    | ({
        relationTo: 'user_roles';
        value: number | UserRole;
      } | null)
    | ({
        relationTo: 'segments';
        value: number | Segment;
      } | null)
    | ({
        relationTo: 'texts';
        value: number | Text;
      } | null)
    | ({
        relationTo: 'text_variants';
        value: number | TextVariant;
      } | null)
    | ({
        relationTo: 'universities';
        value: number | University;
      } | null)
    | ({
        relationTo: 'user_bans';
        value: number | UserBan;
      } | null)
    | ({
        relationTo: 'user_sessions';
        value: number | UserSession;
      } | null)
    | ({
        relationTo: 'user_verifications';
        value: number | UserVerification;
      } | null)
    | ({
        relationTo: 'votes';
        value: number | Vote;
      } | null)
    | ({
        relationTo: 'wallets';
        value: number | Wallet;
      } | null)
    | ({
        relationTo: 'wallet_transactions';
        value: number | WalletTransaction;
      } | null)
    | ({
        relationTo: 'yields';
        value: number | Yield;
      } | null)
    | ({
        relationTo: 'zoos';
        value: number | Zoo;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings_select".
 */
export interface SettingsSelect<T extends boolean = true> {
  uuid?: T;
  attribute?: T;
  value?: T;
  type?: T;
  order?: T;
  xaid?: T;
  created_at?: T;
  updated_at?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "taxonomy_select".
 */
export interface TaxonomySelect<T extends boolean = true> {
  entity?: T;
  name?: T;
  title?: T;
  sort_order?: T;
  created_at?: T;
  updated_at?: T;
  deleted_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  uuid?: T;
  maid?: T;
  title?: T;
  alt_text?: T;
  caption?: T;
  file_name?: T;
  file_path?: T;
  mime_type?: T;
  size_bytes?: T;
  is_public?: T;
  type?: T;
  uploader_aid?: T;
  order?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  uuid?: T;
  human_aid?: T;
  password_hash?: T;
  is_active?: T;
  last_login_at?: T;
  email_verified_at?: T;
  created_at?: T;
  updated_at?: T;
  deleted_at?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "journals_select".
 */
export interface JournalsSelect<T extends boolean = true> {
  uuid?: T;
  user_id?: T;
  action?: T;
  details?: T;
  xaid?: T;
  created_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "assets_select".
 */
export interface AssetsSelect<T extends boolean = true> {
  uuid?: T;
  aaid?: T;
  owner_aid?: T;
  number?: T;
  title?: T;
  url?: T;
  type_name?: T;
  status_name?: T;
  version?: T;
  order?: T;
  xaid?: T;
  created_at?: T;
  updated_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "asset_variants_select".
 */
export interface AssetVariantsSelect<T extends boolean = true> {
  uuid?: T;
  full_aaid?: T;
  number?: T;
  title?: T;
  media_id?: T;
  version?: T;
  order?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bases_select".
 */
export interface BasesSelect<T extends boolean = true> {
  uuid?: T;
  baid?: T;
  full_baid?: T;
  number?: T;
  title?: T;
  laid_from?: T;
  laid_to?: T;
  cycle?: T;
  status_name?: T;
  order?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "base_moves_select".
 */
export interface BaseMovesSelect<T extends boolean = true> {
  uuid?: T;
  baid?: T;
  full_baid?: T;
  full_daid?: T;
  number?: T;
  title?: T;
  laid_from?: T;
  laid_to?: T;
  cycle?: T;
  status_name?: T;
  order?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "base_move_routes_select".
 */
export interface BaseMoveRoutesSelect<T extends boolean = true> {
  uuid?: T;
  full_baid?: T;
  index?: T;
  city?: T;
  laid_id?: T;
  status_name?: T;
  order?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contractors_select".
 */
export interface ContractorsSelect<T extends boolean = true> {
  uuid?: T;
  caid?: T;
  title?: T;
  reg?: T;
  tin?: T;
  status_name?: T;
  type?: T;
  city_name?: T;
  order?: T;
  xaid?: T;
  media_id?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "deals_select".
 */
export interface DealsSelect<T extends boolean = true> {
  uuid?: T;
  daid?: T;
  full_daid?: T;
  client_aid?: T;
  title?: T;
  cycle?: T;
  status_name?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "deal_products_select".
 */
export interface DealProductsSelect<T extends boolean = true> {
  uuid?: T;
  full_daid?: T;
  full_paid?: T;
  quantity?: T;
  status_name?: T;
  order?: T;
  updated_at?: T;
  created_at?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "echelons_select".
 */
export interface EchelonsSelect<T extends boolean = true> {
  uuid?: T;
  eaid?: T;
  parent_eaid?: T;
  department_id?: T;
  position?: T;
  city_name?: T;
  status_name?: T;
  order?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "echelon_employees_select".
 */
export interface EchelonEmployeesSelect<T extends boolean = true> {
  uuid?: T;
  eaid?: T;
  full_eaid?: T;
  haid?: T;
  email?: T;
  status_name?: T;
  is_public?: T;
  order?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  media_id?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "employee_leaves_select".
 */
export interface EmployeeLeavesSelect<T extends boolean = true> {
  uuid?: T;
  elaid?: T;
  full_eaid?: T;
  type?: T;
  order?: T;
  xaid?: T;
  started_at?: T;
  ended_at?: T;
  duration?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "employee_timesheets_select".
 */
export interface EmployeeTimesheetsSelect<T extends boolean = true> {
  uuid?: T;
  etaid?: T;
  full_eaid?: T;
  order?: T;
  xaid?: T;
  started_at?: T;
  ended_at?: T;
  duration?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "expanses_select".
 */
export interface ExpansesSelect<T extends boolean = true> {
  uuid?: T;
  xaid?: T;
  title?: T;
  status_name?: T;
  order?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "finances_select".
 */
export interface FinancesSelect<T extends boolean = true> {
  uuid?: T;
  faid?: T;
  full_daid?: T;
  title?: T;
  sum?: T;
  currency_id?: T;
  cycle?: T;
  type?: T;
  status_name?: T;
  order?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "goals_select".
 */
export interface GoalsSelect<T extends boolean = true> {
  uuid?: T;
  gaid?: T;
  full_gaid?: T;
  parent_full_gaid?: T;
  title?: T;
  cycle?: T;
  type?: T;
  status_name?: T;
  order?: T;
  is_public?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "humans_select".
 */
export interface HumansSelect<T extends boolean = true> {
  uuid?: T;
  haid?: T;
  full_name?: T;
  birthday?: T;
  email?: T;
  sex?: T;
  status_name?: T;
  type?: T;
  city_name?: T;
  order?: T;
  xaid?: T;
  media_id?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "identities_select".
 */
export interface IdentitiesSelect<T extends boolean = true> {
  uuid?: T;
  iaid?: T;
  entity_aid?: T;
  identity_aid?: T;
  permission?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "journal_connections_select".
 */
export interface JournalConnectionsSelect<T extends boolean = true> {
  uuid?: T;
  source_user_id?: T;
  target_user_id?: T;
  relationship_name?: T;
  status?: T;
  details?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "journal_generations_select".
 */
export interface JournalGenerationsSelect<T extends boolean = true> {
  uuid?: T;
  full_maid?: T;
  user_id?: T;
  model_name?: T;
  status?: T;
  token_in?: T;
  token_out?: T;
  total_token?: T;
  details?: T;
  xaid?: T;
  created_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "journal_system_select".
 */
export interface JournalSystemSelect<T extends boolean = true> {
  uuid?: T;
  entity_aid?: T;
  user_id?: T;
  details?: T;
  xaid?: T;
  created_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "keys_select".
 */
export interface KeysSelect<T extends boolean = true> {
  uuid?: T;
  kaid?: T;
  key_prefix?: T;
  key_hash?: T;
  title?: T;
  is_active?: T;
  is_valid?: T;
  order?: T;
  xaid?: T;
  permission_id?: T;
  updated_at?: T;
  created_at?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations_select".
 */
export interface LocationsSelect<T extends boolean = true> {
  uuid?: T;
  laid?: T;
  full_laid?: T;
  title?: T;
  city?: T;
  type?: T;
  status_name?: T;
  is_public?: T;
  order?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messages_select".
 */
export interface MessagesSelect<T extends boolean = true> {
  uuid?: T;
  maid?: T;
  full_maid?: T;
  title?: T;
  status_name?: T;
  order?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "message_threads_select".
 */
export interface MessageThreadsSelect<T extends boolean = true> {
  uuid?: T;
  maid?: T;
  parent_maid?: T;
  title?: T;
  status_name?: T;
  type?: T;
  value?: T;
  order?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  gin?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notices_select".
 */
export interface NoticesSelect<T extends boolean = true> {
  uuid?: T;
  naid?: T;
  target_aid?: T;
  title?: T;
  is_read?: T;
  type_name?: T;
  order?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "outreaches_select".
 */
export interface OutreachesSelect<T extends boolean = true> {
  uuid?: T;
  oaid?: T;
  said?: T;
  title?: T;
  strategy_type?: T;
  mechanic_type?: T;
  order?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "outreach_referrals_select".
 */
export interface OutreachReferralsSelect<T extends boolean = true> {
  uuid?: T;
  oaid?: T;
  title?: T;
  depth?: T;
  order?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "permissions_select".
 */
export interface PermissionsSelect<T extends boolean = true> {
  uuid?: T;
  prm_aid?: T;
  action_key?: T;
  title?: T;
  group_name?: T;
  description?: T;
  order?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  uuid?: T;
  paid?: T;
  title?: T;
  category?: T;
  type?: T;
  status_name?: T;
  is_public?: T;
  order?: T;
  xaid?: T;
  created_at?: T;
  updated_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product_variants_select".
 */
export interface ProductVariantsSelect<T extends boolean = true> {
  uuid?: T;
  pvaid?: T;
  full_paid?: T;
  vendor_aid?: T;
  sku?: T;
  title?: T;
  status_name?: T;
  order?: T;
  xaid?: T;
  created_at?: T;
  updated_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "qualifications_select".
 */
export interface QualificationsSelect<T extends boolean = true> {
  uuid?: T;
  qaid?: T;
  haid?: T;
  title?: T;
  category?: T;
  type?: T;
  status_name?: T;
  order?: T;
  xaid?: T;
  created_at?: T;
  updated_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "relations_select".
 */
export interface RelationsSelect<T extends boolean = true> {
  uuid?: T;
  source_entity?: T;
  target_entity?: T;
  type?: T;
  status_name?: T;
  order?: T;
  xaid?: T;
  created_at?: T;
  updated_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "roles_select".
 */
export interface RolesSelect<T extends boolean = true> {
  uuid?: T;
  raid?: T;
  title?: T;
  name?: T;
  description?: T;
  is_system?: T;
  order?: T;
  xaid?: T;
  created_at?: T;
  updated_at?: T;
  deleted_at?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "role_permissions_select".
 */
export interface RolePermissionsSelect<T extends boolean = true> {
  role_uuid?: T;
  permission_uuid?: T;
  uuid?: T;
  order?: T;
  xaid?: T;
  created_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user_roles_select".
 */
export interface UserRolesSelect<T extends boolean = true> {
  user_uuid?: T;
  role_uuid?: T;
  order?: T;
  created_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "segments_select".
 */
export interface SegmentsSelect<T extends boolean = true> {
  uuid?: T;
  said?: T;
  title?: T;
  status_name?: T;
  order?: T;
  xaid?: T;
  created_at?: T;
  updated_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "texts_select".
 */
export interface TextsSelect<T extends boolean = true> {
  uuid?: T;
  taid?: T;
  title?: T;
  type?: T;
  status_name?: T;
  is_public?: T;
  order?: T;
  xaid?: T;
  created_at?: T;
  updated_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "text_variants_select".
 */
export interface TextVariantsSelect<T extends boolean = true> {
  uuid?: T;
  taid?: T;
  full_taid?: T;
  title?: T;
  type?: T;
  status_name?: T;
  version?: T;
  order?: T;
  xaid?: T;
  created_at?: T;
  updated_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "universities_select".
 */
export interface UniversitiesSelect<T extends boolean = true> {
  uuid?: T;
  uaid?: T;
  parent_uaid?: T;
  full_uaid?: T;
  title?: T;
  status_name?: T;
  order?: T;
  xaid?: T;
  created_at?: T;
  updated_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user_bans_select".
 */
export interface UserBansSelect<T extends boolean = true> {
  uuid?: T;
  user_uuid?: T;
  banned_by_aid?: T;
  reason?: T;
  type?: T;
  expires_at?: T;
  revoked_at?: T;
  revoked_by_aid?: T;
  created_at?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user_sessions_select".
 */
export interface UserSessionsSelect<T extends boolean = true> {
  uuid?: T;
  user_uuid?: T;
  token_hash?: T;
  ip_address?: T;
  user_agent?: T;
  last_active_at?: T;
  expires_at?: T;
  xaid?: T;
  created_at?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user_verifications_select".
 */
export interface UserVerificationsSelect<T extends boolean = true> {
  uuid?: T;
  user_uuid?: T;
  type?: T;
  token_hash?: T;
  expires_at?: T;
  verified_at?: T;
  created_at?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "votes_select".
 */
export interface VotesSelect<T extends boolean = true> {
  uuid?: T;
  vaid?: T;
  full_vaid?: T;
  haid?: T;
  title?: T;
  status_name?: T;
  order?: T;
  xaid?: T;
  created_at?: T;
  updated_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wallets_select".
 */
export interface WalletsSelect<T extends boolean = true> {
  uuid?: T;
  waid?: T;
  full_waid?: T;
  target_aid?: T;
  title?: T;
  status_name?: T;
  order?: T;
  xaid?: T;
  created_at?: T;
  updated_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wallet_transactions_select".
 */
export interface WalletTransactionsSelect<T extends boolean = true> {
  uuid?: T;
  wcaid?: T;
  full_waid?: T;
  target_aid?: T;
  amount?: T;
  status_name?: T;
  order?: T;
  xaid?: T;
  created_at?: T;
  updated_at?: T;
  deleted_at?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "yields_select".
 */
export interface YieldsSelect<T extends boolean = true> {
  uuid?: T;
  yaid?: T;
  parent_yaid?: T;
  full_yaid?: T;
  haid?: T;
  title?: T;
  status_name?: T;
  order?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "zoos_select".
 */
export interface ZoosSelect<T extends boolean = true> {
  uuid?: T;
  zaid?: T;
  parent_zaid?: T;
  name?: T;
  birthday?: T;
  sex?: T;
  status_name?: T;
  city_name?: T;
  order?: T;
  xaid?: T;
  updated_at?: T;
  created_at?: T;
  deleted_at?: T;
  media_id?: T;
  gin?: T;
  fts?: T;
  data_in?: T;
  data_out?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        categoryID?: T;
        title?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}